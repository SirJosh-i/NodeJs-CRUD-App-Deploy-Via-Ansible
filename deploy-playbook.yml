# deploy-only-playbook.yml
- name: Deploy Application Updates
  hosts: myapp-server
  become: yes
  vars:
    app_directory: "/home/ubuntu/project"
    
  tasks:
    - name: Copy application files from local to remote
      synchronize:
        src: "./app/" # Application directory in GitHub repository
        dest: "{{ app_directory }}/"
        delete: yes
        recursive: yes
        private_key: /home/runner/.ssh/id_ed25519
        ssh_connection_multiplexing: false
      delegate_to: localhost  # Ansible needs this to execute this task i.e. Copy files from local machine to remote server

    - name: Check if Docker is installed
      shell: docker --version
      register: docker_check
      ignore_errors: yes  # Prevents playbook failure if Docker is not installed

    - name: Copy Docker install script
      ansible.builtin.copy:
        src: basic-installs.sh  # From GitHub repository
        dest: /tmp/basic-installs.sh  # To the remote server
        mode: '0755'  # Executable permissions
      when: docker_check.rc != 0  # Only copy if Docker is not installed

    - name: Execute Docker install script
      ansible.builtin.shell: /tmp/basic-installs.sh
      become: yes
      when: docker_check.rc != 0

    - name: Start and enable Docker
      systemd:
        name: docker
        state: started
        enabled: yes
      become: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      become: yes

    - name: Install nginx
      apt:
        name: nginx
        state: present
      become: yes
      ignore_errors: yes # Ignore if nginx is already installed

# In each nginx config: notify is mentioned so as, the handlers can restart nginx if any changes are made to the configuration file

    - name: Copy nginx configuration
      copy:
        src: "./app.conf"
        dest: "/etc/nginx/sites-available/app.conf"
        backup: yes
      become: yes
      notify: restart nginx
      ignore_errors: yes # Ignore if configuration file already exists

    - name: Enable nginx site
      file:
        src: "/etc/nginx/sites-available/app.conf"
        dest: "/etc/nginx/sites-enabled/app.conf"
        state: link
      become: yes
      notify: restart nginx
      ignore_errors: yes # Ignore if symlink already exists

    - name: Remove default nginx site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      become: yes
      notify: restart nginx
      ignore_errors: yes  # Ignore if default site does not exist

    - name: View Docker containers
      shell: docker ps
      register: running_containers  # Creates a variable with the output of the previous command
    - name: Start containers only if Docker containers are not running
      shell: docker compose up --build -d
      become_user: "{{ ansible_user }}"
      when: running_containers.stdout == ""

    - name: Creating Table and Inserting Data in postgres containerd.io
      vars:
        db_container: "db"
        user: "appu"
        myapp: "myapp"
      shell: |
        docker exec -i {{db_container}} psql -U {{user}} -d {{myapp}} -c "CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, name VARCHAR(100));"
      ignore_errors: yes  # Ignore if table already exists
        
    - name: Verify deployment
      uri:
        url: "http://app.joshisiris.com.np"
        method: GET
        status_code: 200
      delegate_to: localhost

# If any update is made to the nginx configuration, restart nginx
  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
      become: yes
